// <auto-generated />
using System;
using EventFastEndpoints.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EventFastEndpoints.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EventFastEndpoints.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EventFastEndpoints.Models.Organizer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organizers");
                });

            modelBuilder.Entity("EventFastEndpoints.Models.Sponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sponsors");
                });

            modelBuilder.Entity("EventFastEndpoints.Models.Event", b =>
                {
                    b.OwnsOne("EventFastEndpoints.Models.Amenities", "Amenities", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("integer");

                            b1.Property<bool>("Food")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Parking")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Restrooms")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Wifi")
                                .HasColumnType("boolean");

                            b1.HasKey("EventId");

                            b1.ToTable("Events");

                            b1.ToJson("Amenities");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsOne("EventFastEndpoints.Models.LocationInfo", "LocationInfo", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("integer");

                            b1.Property<int>("CityId")
                                .HasColumnType("integer");

                            b1.Property<double>("Lat")
                                .HasColumnType("double precision");

                            b1.Property<string>("Location")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<double>("Lon")
                                .HasColumnType("double precision");

                            b1.HasKey("EventId");

                            b1.ToTable("Events");

                            b1.ToJson("LocationInfo");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.Navigation("Amenities")
                        .IsRequired();

                    b.Navigation("LocationInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("EventFastEndpoints.Models.Organizer", b =>
                {
                    b.OwnsOne("EventFastEndpoints.Models.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<int>("OrganizerId")
                                .HasColumnType("integer");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Social")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("OrganizerId");

                            b1.ToTable("Organizers");

                            b1.ToJson("ContactInfo");

                            b1.WithOwner()
                                .HasForeignKey("OrganizerId");
                        });

                    b.Navigation("ContactInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("EventFastEndpoints.Models.Sponsor", b =>
                {
                    b.OwnsOne("EventFastEndpoints.Models.SponsorDetail", "SponsorDetails", b1 =>
                        {
                            b1.Property<int>("SponsorId")
                                .HasColumnType("integer");

                            b1.Property<string>("Benefit")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("EndOfContract")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("Package")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("SponsorId");

                            b1.ToTable("Sponsors");

                            b1.ToJson("SponsorDetails");

                            b1.WithOwner()
                                .HasForeignKey("SponsorId");
                        });

                    b.Navigation("SponsorDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
